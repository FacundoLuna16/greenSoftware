"use client"

import { useState, useEffect, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Checkbox } from "@/components/ui/checkbox"
import { Separator } from "@/components/ui/separator"
import { Progress } from "@/components/ui/progress"
import { Slider } from "@/components/ui/slider"
import { TooltipProvider, Tooltip, TooltipContent, TooltipTrigger } from "@/components/ui/tooltip"
import {
  Leaf,
  Zap,
  Target,
  Users,
  Clock,
  MapPin,
  Settings,
  Wrench,
  Calculator,
  CheckSquare,
  AlertTriangle,
  Cpu,
  Cloud,
  Trash2,
  Battery,
  DollarSign,
  Globe,
  Award,
  User,
  Crown,
  Shield,
  Play,
  Code,
  TestTube,
  Rocket,
  RefreshCw,
  Building,
  Factory,
  GraduationCap,
  Landmark,
  Code2,
  Box,
  Download,
  RotateCcw,
  Smartphone,
  Server,
  MousePointer,
  HardDrive,
  TreePine,
  Home,
  BarChart3,
  ChevronUp,
  Sparkles,
  Activity,
  TrendingUp,
  Mail,
  BookOpen,
  Star,
  Trophy,
  Medal,
  ArrowRight,
} from "lucide-react"
import Image from "next/image"
// Componente de imagen optimizada con lazy loading
const OptimizedImage = ({ 
  src, 
  alt, 
  className = "", 
  width = 400, 
  height = 300,
  priority = false 
}: {
  src: string
  alt: string
  className?: string
  width?: number
  height?: number
  priority?: boolean
}) => {
  const [isLoading, setIsLoading] = useState(true)
  const [hasError, setHasError] = useState(false)

  return (
    <div className={`relative overflow-hidden rounded-xl ${className}`}>
      {!hasError ? (
        <Image
          src={src}
          alt={alt}
          width={width}
          height={height}
          priority={priority}
          className={`transition-all duration-700 ${
            isLoading ? 'scale-110 blur-md opacity-0' : 'scale-100 blur-0 opacity-100'
          } object-cover w-full h-full hover:scale-105`}
          onLoad={() => setIsLoading(false)}
          onError={() => {
            setHasError(true)
            setIsLoading(false)
          }}
        />
      ) : (
        <div className="w-full h-full bg-gradient-to-br from-green-100 to-blue-100 flex items-center justify-center">
          <div className="text-center">
            <TreePine className="h-12 w-12 text-green-600 mx-auto mb-2" />
            <p className="text-sm text-gray-600">Green Tech Visual</p>
          </div>
        </div>
      )}
      
      {isLoading && !hasError && (
        <div className="absolute inset-0 bg-gradient-to-br from-green-100 to-blue-100 animate-pulse flex items-center justify-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-green-600"></div>
        </div>
      )}
    </div>
  )
}

// URLs de imágenes gratuitas (Unsplash) relacionadas con Green Software
const IMAGES = {
  hero: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=800&h=600&fit=crop&crop=center",
  greenTech: "https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=600&h=400&fit=crop",
  coding: "https://images.unsplash.com/photo-1461749280684-dccba630e2f6?w=600&h=400&fit=crop",
  dataCenter: "https://images.unsplash.com/photo-1558494949-ef010cbdcc31?w=600&h=400&fit=crop",
  renewable: "https://images.unsplash.com/photo-1497435334941-8c899ee9e8e9?w=600&h=400&fit=crop",
  team: "https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=600&h=400&fit=crop",
  circuit: "https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=600&h=400&fit=crop",
  cloud: "https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=600&h=400&fit=crop",
  calculator: "https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=600&h=400&fit=crop",
  forest: "https://images.unsplash.com/photo-1441974231531-c6227db76b6e?w=600&h=400&fit=crop"
}

// Componente de dispositivos flotantes inspirado en la portada
const FloatingDevices = () => {
  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none">
      {/* Laptop flotante */}
      <div className="absolute top-20 left-10 animate-float" style={{ animationDelay: "0s" }}>
        <div className="relative">
          <div className="w-24 h-16 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg shadow-2xl">
            <div className="w-20 h-12 bg-green-400 rounded-sm m-2 flex items-center justify-center">
              <Code className="h-6 w-6 text-green-800" />
            </div>
          </div>
          <div className="w-24 h-2 bg-gray-700 rounded-b-lg"></div>
        </div>
      </div>

      {/* Tablet flotante */}
      <div className="absolute top-40 right-20 animate-float" style={{ animationDelay: "1s" }}>
        <div className="w-16 h-20 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg shadow-2xl">
          <div className="w-14 h-18 bg-blue-400 rounded-sm m-1 flex items-center justify-center">
            <BarChart3 className="h-4 w-4 text-blue-800" />
          </div>
        </div>
      </div>

      {/* Smartphone flotante */}
      <div className="absolute bottom-40 left-20 animate-float" style={{ animationDelay: "2s" }}>
        <div className="w-8 h-14 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg shadow-2xl">
          <div className="w-6 h-12 bg-purple-400 rounded-sm m-1 flex items-center justify-center">
            <Leaf className="h-3 w-3 text-purple-800" />
          </div>
        </div>
      </div>

      {/* Monitor flotante */}
      <div className="absolute bottom-20 right-10 animate-float" style={{ animationDelay: "3s" }}>
        <div className="relative">
          <div className="w-20 h-12 bg-gradient-to-br from-gray-800 to-gray-900 rounded-lg shadow-2xl">
            <div className="w-18 h-10 bg-emerald-400 rounded-sm m-1 flex items-center justify-center">
              <TreePine className="h-4 w-4 text-emerald-800" />
            </div>
          </div>
          <div className="w-2 h-4 bg-gray-700 mx-auto"></div>
          <div className="w-8 h-1 bg-gray-600 mx-auto rounded"></div>
        </div>
      </div>
    </div>
  )
}

// Componente de hojas flotantes
const FloatingLeaves = () => {
  const [leaves, setLeaves] = useState<Array<{
    left: number
    animationDelay: number
    animationDuration: number
    rotation: number
  }>>([])

  useEffect(() => {
    // Generar hojas solo en el cliente para evitar problemas de hidratación
    const leafData = [...Array(20)].map(() => ({
      left: Math.random() * 100,
      animationDelay: Math.random() * 10,
      animationDuration: 8 + Math.random() * 4,
      rotation: Math.random() * 360,
    }))
    setLeaves(leafData)
  }, [])

  if (leaves.length === 0) return null

  return (
    <div className="fixed inset-0 pointer-events-none z-0">
      {leaves.map((leaf, i) => (
        <div
          key={i}
          className="absolute animate-leaf-fall"
          style={{
            left: `${leaf.left}%`,
            animationDelay: `${leaf.animationDelay}s`,
            animationDuration: `${leaf.animationDuration}s`,
          }}
        >
          <Leaf
            className="h-4 w-4 text-green-400 opacity-30 transform rotate-12"
            style={{ transform: `rotate(${leaf.rotation}deg)` }}
          />
        </div>
      ))}
    </div>
  )
}

// Componente de circuitos animados
const AnimatedCircuits = () => {
  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none opacity-10">
      <svg className="w-full h-full" viewBox="0 0 800 600">
        <defs>
          <pattern id="circuit" x="0" y="0" width="100" height="100" patternUnits="userSpaceOnUse">
            <path
              d="M10,10 L90,10 L90,90 L10,90 Z M30,30 L70,30 M50,10 L50,50"
              stroke="#10b981"
              strokeWidth="2"
              fill="none"
              className="animate-pulse"
            />
            <circle cx="50" cy="50" r="3" fill="#10b981" className="animate-ping" />
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#circuit)" />
      </svg>
    </div>
  )
}

// Componente contador animado mejorado
const AnimatedCounter = ({
  target,
  label,
  suffix = "",
  prefix = "",
}: { target: number; label: string; suffix?: string; prefix?: string }) => {
  const [count, setCount] = useState(0)
  const [mounted, setMounted] = useState(false)

  useEffect(() => {
    setMounted(true)
  }, [])

  useEffect(() => {
    if (!mounted) return
    
    const duration = 2000
    const steps = 60
    const increment = target / steps
    let current = 0

    const timer = setInterval(() => {
      current += increment
      if (current >= target) {
        setCount(target)
        clearInterval(timer)
      } else {
        setCount(Math.floor(current))
      }
    }, duration / steps)

    return () => clearInterval(timer)
  }, [target, mounted])

  return (
    <div className="text-center">
      <div className="text-3xl font-bold text-green-600 mb-1">
        {prefix}
        {mounted ? count.toLocaleString() : '0'}
        {suffix}
      </div>
      <div className="text-sm text-gray-600">{label}</div>
    </div>
  )
}

// Componente de planeta 3D giratorio
const RotatingEarth = () => {
  const canvasRef = useRef<HTMLCanvasElement>(null)
  const animationRef = useRef<number>()
  const [mounted, setMounted] = useState(false)

  useEffect(() => {
    setMounted(true)
  }, [])

  useEffect(() => {
    if (!mounted) return
    
    const canvas = canvasRef.current
    if (!canvas) return

    const ctx = canvas.getContext("2d")
    if (!ctx) return

    let rotation = 0
    const codeElements = [
      "function green()",
      "const eco = true",
      "reduce(energy)",
      "optimize()",
      "sustainable",
      "clean.code",
    ]

    const floatingCode: Array<{
      text: string
      x: number
      y: number
      angle: number
      radius: number
      speed: number
    }> = []

    // Crear elementos de código flotante con valores deterministas
    codeElements.forEach((code, i) => {
      const seed = i * 0.1 // Usar índice para generar valores deterministas
      floatingCode.push({
        text: code,
        x: 0,
        y: 0,
        angle: (i * Math.PI * 2) / codeElements.length,
        radius: 120 + (seed * 40),
        speed: 0.005 + (seed * 0.01),
      })
    })

    const animate = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height)

      const centerX = canvas.width / 2
      const centerY = canvas.height / 2
      const earthRadius = 60

      // Dibujar la Tierra
      const gradient = ctx.createRadialGradient(centerX - 20, centerY - 20, 0, centerX, centerY, earthRadius)
      gradient.addColorStop(0, "#34d399")
      gradient.addColorStop(0.7, "#10b981")
      gradient.addColorStop(1, "#059669")

      ctx.fillStyle = gradient
      ctx.beginPath()
      ctx.arc(centerX, centerY, earthRadius, 0, Math.PI * 2)
      ctx.fill()

      // Continentes simplificados
      ctx.fillStyle = "#047857"
      ctx.globalAlpha = 0.6
      ctx.beginPath()
      ctx.arc(centerX - 20, centerY - 10, 15, 0, Math.PI * 2)
      ctx.fill()
      ctx.beginPath()
      ctx.arc(centerX + 15, centerY + 20, 12, 0, Math.PI * 2)
      ctx.fill()
      ctx.globalAlpha = 1

      // Circuitos en la superficie
      ctx.strokeStyle = "#6ee7b7"
      ctx.lineWidth = 2
      for (let i = 0; i < 6; i++) {
        const angle = rotation + (i * Math.PI) / 3
        const x1 = centerX + Math.cos(angle) * (earthRadius * 0.8)
        const y1 = centerY + Math.sin(angle) * (earthRadius * 0.8)
        const x2 = centerX + Math.cos(angle + Math.PI) * (earthRadius * 0.8)
        const y2 = centerY + Math.sin(angle + Math.PI) * (earthRadius * 0.8)

        ctx.beginPath()
        ctx.moveTo(x1, y1)
        ctx.lineTo(x2, y2)
        ctx.stroke()
      }

      // Elementos de código flotante
      ctx.font = "12px monospace"
      ctx.fillStyle = "#10b981"
      floatingCode.forEach((element) => {
        element.angle += element.speed
        element.x = centerX + Math.cos(element.angle) * element.radius
        element.y = centerY + Math.sin(element.angle) * element.radius

        ctx.save()
        ctx.globalAlpha = 0.7 + Math.sin(Date.now() * 0.003 + element.angle) * 0.3
        ctx.fillText(element.text, element.x - 30, element.y)
        ctx.restore()
      })

      rotation += 0.01
      animationRef.current = requestAnimationFrame(animate)
    }

    animate()

    return () => {
      if (animationRef.current) {
        cancelAnimationFrame(animationRef.current)
      }
    }
  }, [mounted])

  if (!mounted) {
    return <div className="w-[300px] h-[300px] bg-gradient-to-br from-green-100 to-blue-100 rounded-full animate-pulse flex items-center justify-center">
      <TreePine className="h-16 w-16 text-green-600" />
    </div>
  }

  return <canvas ref={canvasRef} width={300} height={300} className="max-w-full h-auto drop-shadow-2xl" />
}

export default function GreenSoftwareApp() {
  const [activeSection, setActiveSection] = useState("inicio")
  const [carbonFootprint, setCarbonFootprint] = useState({
    users: [1000],
    sessions: [3],
    dataTransfer: [500],
  })
  const [carbonResult, setCarbonResult] = useState<{
    dailyCO2: number
    annualCO2: number
    treesEquivalent: number
    totalEnergy: number
  } | null>(null)
  const [isCalculating, setIsCalculating] = useState(false)
  const [checkedItems, setCheckedItems] = useState<string[]>([])
  const [showScrollTop, setShowScrollTop] = useState(false)

  const sections = [
    { id: "inicio", title: "Inicio", icon: Home },
    { id: "que-es", title: "¿Qué es?", icon: Leaf },
    { id: "por-que", title: "¿Por qué?", icon: AlertTriangle },
    { id: "para-que", title: "¿Para qué?", icon: Target },
    { id: "quien", title: "¿Quién?", icon: Users },
    { id: "cuando", title: "¿Cuándo?", icon: Clock },
    { id: "donde", title: "¿Dónde?", icon: MapPin },
    { id: "como", title: "¿Cómo?", icon: Settings },
    { id: "con-que", title: "¿Con qué?", icon: Wrench },
    { id: "cuanto", title: "¿Cuánto?", icon: BarChart3 },
    { id: "calculadora", title: "Calculadora", icon: Calculator },
    { id: "cumpliendo", title: "Evaluación", icon: CheckSquare },
  ]

  // Scroll spy effect
  useEffect(() => {
    const handleScroll = () => {
      const scrollPosition = window.scrollY + 100
      setShowScrollTop(window.scrollY > 500)

      for (const section of sections) {
        const element = document.getElementById(section.id)
        if (element) {
          const offsetTop = element.offsetTop
          const offsetBottom = offsetTop + element.offsetHeight

          if (scrollPosition >= offsetTop && scrollPosition < offsetBottom) {
            setActiveSection(section.id)
            break
          }
        }
      }
    }

    window.addEventListener("scroll", handleScroll)
    return () => window.removeEventListener("scroll", handleScroll)
  }, [])

  const scrollToSection = (sectionId: string) => {
    const element = document.getElementById(sectionId)
    if (element) {
      element.scrollIntoView({ behavior: "smooth", block: "start" })
    }
  }

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: "smooth" })
  }

  const complianceItems = [
    { text: "¿Aplicas eco-coding (código eficiente y limpio)?", icon: Code2 },
    { text: "¿Utilizas lenguajes eficientes como Rust o Go?", icon: Wrench },
    { text: "¿Implementas lazy loading y carga bajo demanda?", icon: Download },
    { text: "¿Monitoras consumo con herramientas específicas?", icon: BarChart3 },
    { text: "¿Usas virtualización y contenedores?", icon: Box },
    { text: "¿Aplicas el estándar Software Carbon Intensity (SCI)?", icon: Award },
    { text: "¿Utilizas energía renovable en servidores?", icon: Leaf },
    { text: "¿Realizas análisis del ciclo de vida del software (SLCA)?", icon: RotateCcw },
    { text: "¿Optimizas tu código regularmente?", icon: Code },
    { text: "¿Evitas software innecesario o mal diseñado?", icon: Trash2 },
  ]

  const calculateCarbonFootprint = async () => {
    setIsCalculating(true)
    await new Promise((resolve) => setTimeout(resolve, 2000))

    const users = carbonFootprint.users[0]
    const sessions = carbonFootprint.sessions[0]
    const dataTransfer = carbonFootprint.dataTransfer[0]

    const energyTransfer = dataTransfer * 0.006
    const energySessions = users * sessions * 0.02
    const energyDevices = users * sessions * 0.01
    const totalEnergy = (energyTransfer + energySessions + energyDevices) * 1.8

    const dailyCO2 = totalEnergy * 0.8
    const annualCO2 = (dailyCO2 * 365) / 1000
    const treesEquivalent = Math.round(annualCO2 * 40)

    setCarbonResult({
      dailyCO2,
      annualCO2,
      treesEquivalent,
      totalEnergy,
    })
    setIsCalculating(false)
  }

  const toggleCheckItem = (item: string) => {
    setCheckedItems((prev) => (prev.includes(item) ? prev.filter((i) => i !== item) : [...prev, item]))
  }

  const complianceScore = Math.round((checkedItems.length / complianceItems.length) * 100)

  return (
    <TooltipProvider>
      <div className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-emerald-50 relative">
        {/* Elementos de fondo */}
        <FloatingLeaves />
        <AnimatedCircuits />

        {/* Header Visual */}
        <header className="bg-white/95 backdrop-blur-md border-b border-green-200 fixed top-0 left-0 right-0 z-50 shadow-lg">
          <div className="container mx-auto px-4 py-3">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-3">
                <div className="relative">
                  <TreePine className="h-8 w-8 text-green-600 animate-pulse" />
                  <Sparkles className="h-3 w-3 text-green-400 absolute -top-1 -right-1 animate-bounce" />
                </div>
                <div>
                  <h1 className="text-lg font-bold text-green-800">Green Software</h1>
                </div>
              </div>

              {/* Navigation Visual */}
              <nav className="hidden lg:flex space-x-1">
                {sections.map((section) => {
                  const Icon = section.icon
                  return (
                    <Tooltip key={section.id}>
                      <TooltipTrigger asChild>
                        <Button
                          variant={activeSection === section.id ? "default" : "ghost"}
                          size="sm"
                          onClick={() => scrollToSection(section.id)}
                          className={`transition-all duration-300 hover:scale-110 ${
                            activeSection === section.id
                              ? "bg-green-600 hover:bg-green-700 shadow-lg scale-105"
                              : "hover:bg-green-100 hover:shadow-md"
                          }`}
                        >
                          <Icon className="h-4 w-4" />
                        </Button>
                      </TooltipTrigger>
                      <TooltipContent>
                        <p>{section.title}</p>
                      </TooltipContent>
                    </Tooltip>
                  )
                })}
              </nav>

              {/* Progress Indicator */}
              <div className="hidden lg:block">
                <div className="w-32 h-2 bg-gray-200 rounded-full overflow-hidden">
                  <div
                    className="h-full bg-gradient-to-r from-green-500 to-blue-500 transition-all duration-300"
                    style={{
                      width: `${((sections.findIndex((s) => s.id === activeSection) + 1) / sections.length) * 100}%`,
                    }}
                  ></div>
                </div>
              </div>
            </div>
          </div>
        </header>

        {/* Scroll to Top Button */}
        {showScrollTop && (
          <Button
            onClick={scrollToTop}
            className="fixed bottom-8 right-8 z-50 rounded-full w-12 h-12 bg-green-600 hover:bg-green-700 shadow-lg hover:scale-110 transition-all duration-300"
            size="icon"
          >
            <ChevronUp className="h-6 w-6" />
          </Button>
        )}

        {/* Main Content */}
        <main className="pt-20">
          {/* Hero Section - Inspirado en la portada */}
          <section id="inicio" className="py-20 px-4 relative overflow-hidden min-h-screen flex items-center">
            <FloatingDevices />
            <div className="absolute inset-0 bg-gradient-to-br from-green-100/40 via-blue-100/40 to-emerald-100/40"></div>

            <div className="container mx-auto relative z-10">
              <div className="max-w-7xl mx-auto">
                <div className="grid lg:grid-cols-2 gap-12 items-center">
                  <div className="space-y-8 animate-in slide-in-from-left-5">
                    <div className="space-y-6">
                      <h2 className="text-6xl md:text-8xl font-bold leading-tight">
                        <span className="text-green-800">Green</span>
                        <br />
                        <span className="text-blue-600">Software</span>
                      </h2>
                      <h3 className="text-2xl md:text-3xl text-gray-700 font-medium">
                        Desarrollo Tecnológico Sostenible
                      </h3>
                      <p className="text-lg text-gray-600 max-w-2xl leading-relaxed">
                        Un enfoque del desarrollo de software que busca minimizar el impacto ambiental
                      </p>
                    </div>

                    {/* Contadores en tiempo real */}
                    <div className="grid grid-cols-3 gap-6 p-6 bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl">
                      <AnimatedCounter target={30} label="Reducción energética" suffix="%" />
                      <AnimatedCounter target={4} label="Emisiones IT globales" suffix="%" />
                      <AnimatedCounter target={2025} label="Año objetivo" />
                    </div>

                    <div className="flex space-x-4">
                      <Button
                        onClick={() => scrollToSection("que-es")}
                        className="bg-green-600 hover:bg-green-700 text-white px-8 py-4 rounded-full text-lg font-semibold hover:scale-105 transition-all duration-300 shadow-lg"
                      >
                        <Play className="h-5 w-5 mr-2" />
                        Explorar
                      </Button>
                      <Button
                        onClick={() => scrollToSection("calculadora")}
                        variant="outline"
                        className="border-green-600 text-green-600 hover:bg-green-50 px-8 py-4 rounded-full text-lg font-semibold hover:scale-105 transition-all duration-300"
                      >
                        <Calculator className="h-5 w-5 mr-2" />
                        Calcular
                      </Button>
                    </div>
                  </div>

                  <div className="flex justify-center animate-in slide-in-from-right-5 delay-150">
                    <div className="relative">
                      <RotatingEarth />
                      <div className="absolute -inset-12 bg-gradient-to-r from-green-400/20 to-blue-400/20 rounded-full blur-3xl animate-pulse"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* ¿Qué es? - Cards Interactivas con imagen */}
          <section id="que-es" className="py-20 px-4 bg-white/70">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-green-800 mb-6">¿Qué es Green Software?</h3>
                <p className="text-xl text-gray-600 max-w-2xl mx-auto">Cinco pilares fundamentales</p>
              </div>

              {/* Imagen principal para esta sección */}
              <div className="mb-12 max-w-4xl mx-auto">
                <Image 
                  src={IMAGES.greenTech}
                  alt="Green Technology - Tecnología sostenible"
                  className="w-full h-80 shadow-2xl"
                  priority={false}
                />
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6">
                <Card className="group border-0 bg-gradient-to-br from-green-50 to-green-100 hover:from-green-100 hover:to-green-200 transition-all duration-500 hover:scale-105 hover:shadow-2xl cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Zap className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-sm font-bold text-green-800 mb-2">Consumo Energético</h4>
                    <p className="text-xs text-gray-700">Reducir en dispositivos y servidores</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-blue-50 to-blue-100 hover:from-blue-100 hover:to-blue-200 transition-all duration-500 hover:scale-105 hover:shadow-2xl cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Cpu className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-sm font-bold text-blue-800 mb-2">Recursos Computacionales</h4>
                    <p className="text-xs text-gray-700">Optimizar RAM, CPU, ciclos</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-purple-50 to-purple-100 hover:from-purple-100 hover:to-purple-200 transition-all duration-500 hover:scale-105 hover:shadow-2xl cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Cloud className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-sm font-bold text-purple-800 mb-2">Arquitecturas Eficientes</h4>
                    <p className="text-xs text-gray-700">Serverless, contenedores, edge</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-emerald-50 to-emerald-100 hover:from-emerald-100 hover:to-emerald-200 transition-all duration-500 hover:scale-105 hover:shadow-2xl cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Leaf className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-sm font-bold text-emerald-800 mb-2">Green IS</h4>
                    <p className="text-xs text-gray-700">Información ambiental en tiempo real</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-orange-50 to-orange-100 hover:from-orange-100 hover:to-orange-200 transition-all duration-500 hover:scale-105 hover:shadow-2xl cursor-pointer">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Trash2 className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-sm font-bold text-orange-800 mb-2">Evitar Desperdicio</h4>
                    <p className="text-xs text-gray-700">Software innecesario o mal diseñado</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>

          {/* ¿Por qué? - Infografía Animada con imagen de fondo */}
          <section id="por-que" className="py-20 px-4 bg-gradient-to-r from-red-50 to-orange-50 relative">
            {/* Imagen de fondo para crisis climática */}
            <div className="absolute inset-0 opacity-20">
              <Image 
                src={IMAGES.forest}
                alt="Crisis climática"
                className="w-full h-full object-cover"
              />
            </div>
            <div className="absolute inset-0 bg-gradient-to-r from-red-50/90 to-orange-50/90"></div>
            
            <div className="container mx-auto relative z-10">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-red-700 mb-6">¿Por qué es Urgente?</h3>
                <p className="text-xl text-gray-600">La crisis del impacto digital</p>
              </div>

              <div className="grid lg:grid-cols-3 gap-12 items-center">
                {/* Crisis Climática */}
                <Card className="border-0 bg-gradient-to-br from-red-100 to-red-200 shadow-xl">
                  <CardContent className="p-8 text-center">
                    <AlertTriangle className="h-16 w-16 text-red-600 mx-auto mb-6 animate-pulse" />
                    <h4 className="text-2xl font-bold text-red-800 mb-4">Crisis Climática</h4>
                    <div className="space-y-3">
                      <div className="flex items-center justify-center space-x-2">
                        <TrendingUp className="h-5 w-5 text-red-500" />
                        <span className="text-gray-700">Calentamiento global acelerado</span>
                      </div>
                      <div className="flex items-center justify-center space-x-2">
                        <Globe className="h-5 w-5 text-red-500" />
                        <span className="text-gray-700">Compromisos climáticos urgentes</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="border-0 bg-gradient-to-br from-blue-100 to-blue-200 shadow-xl">
                  <CardContent className="p-8 text-center">
                    <Smartphone className="h-16 w-16 text-blue-600 mx-auto mb-6 animate-bounce" />
                    <h4 className="text-2xl font-bold text-blue-800 mb-4">Digitalización Masiva</h4>
                    <div className="space-y-3">
                      <div className="flex items-center justify-center space-x-2">
                        <Users className="h-5 w-5 text-blue-500" />
                        <span className="text-gray-700">Millones de nuevos usuarios</span>
                      </div>
                      <div className="flex items-center justify-center space-x-2">
                        <Activity className="h-5 w-5 text-blue-500" />
                        <span className="text-gray-700">Consumo digital exponencial</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="border-0 bg-gradient-to-br from-gray-100 to-gray-200 shadow-xl">
                  <CardContent className="p-8 text-center">
                    <Server className="h-16 w-16 text-gray-600 mx-auto mb-6 animate-pulse" />
                    <h4 className="text-2xl font-bold text-gray-800 mb-4">Infraestructura IT</h4>
                    <div className="space-y-3">
                      <div className="flex items-center justify-center space-x-2">
                        <Zap className="h-5 w-5 text-gray-500" />
                        <span className="text-gray-700">4% emisiones globales</span>
                      </div>
                      <div className="flex items-center justify-center space-x-2">
                        <TrendingUp className="h-5 w-5 text-gray-500" />
                        <span className="text-gray-700">Crecimiento 8% anual</span>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>

          {/* ¿Para qué? - Justificaciones */}
          <section id="para-que" className="py-20 px-4 bg-white/70">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-green-800 mb-6">¿Para qué Green Software?</h3>
                <p className="text-xl text-gray-600">Beneficios tangibles y medibles</p>
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                <Card className="group border-0 bg-gradient-to-br from-green-50 to-green-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Battery className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-green-800 mb-2">Reduce Consumo</h4>
                    <p className="text-sm text-gray-700">Menor consumo energético en dispositivos y servidores</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-blue-50 to-blue-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <DollarSign className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-blue-800 mb-2">Disminuye Costos</h4>
                    <p className="text-sm text-gray-700">Costos operativos reducidos a mediano y largo plazo</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-purple-50 to-purple-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Globe className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-purple-800 mb-2">Compromisos Climáticos</h4>
                    <p className="text-sm text-gray-700">Contribuye a objetivos internacionales</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-orange-50 to-orange-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Award className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-orange-800 mb-2">Responsabilidad Social</h4>
                    <p className="text-sm text-gray-700}>Fortalece imagen organizacional</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
        </main>

        {/* ¿Quién? - Avatares con imagen de equipo */}
          <section id="quien" className="py-20 px-4 bg-gradient-to-br from-blue-50 to-purple-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-blue-800 mb-6">¿Quién Implementa?</h3>
                <p className="text-xl text-gray-600">Actores clave en la transformación</p>
              </div>

              {/* Imagen de equipo */}
              <div className="mb-12 max-w-3xl mx-auto">
                <Image 
                  src={IMAGES.team}
                  alt="Equipo de desarrollo trabajando en Green Software"
                  className="w-full h-60 shadow-2xl rounded-2xl"
                />
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-20 h-20 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <User className="h-10 w-10 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">Desarrolladores</h4>
                    <p className="text-sm text-gray-600">Diseñadores de software</p>
                    <div className="mt-4">
                      <Progress value={85} className="h-2" />
                      <span className="text-xs text-gray-500 mt-1 block">Adopción: 85%</span>
                    </div>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-20 h-20 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Crown className="h-10 w-10 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">Líderes Técnicos</h4>
                    <p className="text-sm text-gray-600">CIOs y CTOs</p>
                    <div className="mt-4">
                      <Progress value={70} className="h-2" />
                      <span className="text-xs text-gray-500 mt-1 block">Adopción: 70%</span>
                    </div>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-20 h-20 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Users className="h-10 w-10 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">Equipos</h4>
                    <p className="text-sm text-gray-600">DevOps, UX/UI, QA</p>
                    <div className="mt-4">
                      <Progress value={60} className="h-2" />
                      <span className="text-xs text-gray-500 mt-1 block">Adopción: 60%</span>
                    </div>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-20 h-20 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Shield className="h-10 w-10 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-gray-800 mb-2">Especialistas</h4>
                    <p className="text-sm text-gray-600">Sustentabilidad digital</p>
                    <div className="mt-4">
                      <Progress value={45} className="h-2" />
                      <span className="text-xs text-gray-500 mt-1 block">Adopción: 45%</span>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>

          {/* ¿Cuándo? - Timeline */}
          <section id="cuando" className="py-20 px-4 bg-white/70">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-purple-800 mb-6">¿Cuándo Implementar?</h3>
                <p className="text-xl text-gray-600">Timeline del ciclo de desarrollo</p>
              </div>

              <div className="flex justify-center">
                <div className="flex items-center space-x-8 bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-xl">
                  <div className="flex flex-col items-center group">
                    <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-lg">
                      <Play className="h-8 w-8 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-700">Inicio</span>
                  </div>
                  <ArrowRight className="h-4 w-4 text-gray-400" />
                  
                  <div className="flex flex-col items-center group">
                    <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-lg">
                      <Code className="h-8 w-8 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-700">Desarrollo</span>
                  </div>
                  <ArrowRight className="h-4 w-4 text-gray-400" />
                  
                  <div className="flex flex-col items-center group">
                    <div className="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-lg">
                      <TestTube className="h-8 w-8 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-700">Testing</span>
                  </div>
                  <ArrowRight className="h-4 w-4 text-gray-400" />
                  
                  <div className="flex flex-col items-center group">
                    <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-lg">
                      <Rocket className="h-8 w-8 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-700">Deploy</span>
                  </div>
                  <ArrowRight className="h-4 w-4 text-gray-400" />
                  
                  <div className="flex flex-col items-center group">
                    <div className="w-16 h-16 bg-red-500 rounded-full flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300 shadow-lg">
                      <RefreshCw className="h-8 w-8 text-white" />
                    </div>
                    <span className="text-sm font-medium text-gray-700">Mantenimiento</span>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* ¿Dónde? - Lugares */}
          <section id="donde" className="py-20 px-4 bg-gradient-to-br from-green-50 to-blue-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-green-800 mb-6">¿Dónde Aplicar?</h3>
                <p className="text-xl text-gray-600">Contextos de implementación</p>
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Building className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-blue-800 mb-2">Organizaciones Tech</h4>
                    <p className="text-sm text-gray-700">Empresas tecnológicas</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Factory className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-purple-800 mb-2">Infraestructura Digital</h4>
                    <p className="text-sm text-gray-700">Empresas con IT</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <GraduationCap className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-green-800 mb-2">Entornos Académicos</h4>
                    <p className="text-sm text-gray-700">Universidades</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6 text-center">
                    <div className="w-16 h-16 bg-orange-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:animate-bounce">
                      <Landmark className="h-8 w-8 text-white" />
                    </div>
                    <h4 className="text-lg font-bold text-orange-800 mb-2">Administraciones</h4>
                    <p className="text-sm text-gray-700">Sector público</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>

          {/* ¿Cómo? - Técnicas con imagen de código */}
          <section id="como" className="py-20 px-4 bg-white/70">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-blue-800 mb-6">¿Cómo Implementar?</h3>
                <p className="text-xl text-gray-600">Técnicas específicas</p>
              </div>

              {/* Imagen de código verde */}
              <div className="mb-12 max-w-2xl mx-auto">
                <Image 
                  src={IMAGES.coding}
                  alt="Green Coding - Programación sostenible"
                  className="w-full h-60 shadow-2xl rounded-2xl"
                />
              </div>

              <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                <Card className="group border-0 bg-gradient-to-br from-green-50 to-green-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6">
                    <div className="flex items-center space-x-4 mb-4">
                      <div className="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center group-hover:animate-spin">
                        <Code2 className="h-6 w-6 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-green-800">Eco-coding</h4>
                    </div>
                    <p className="text-sm text-gray-700">Código eficiente y limpio</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-blue-50 to-blue-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6">
                    <div className="flex items-center space-x-4 mb-4">
                      <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center group-hover:animate-spin">
                        <Box className="h-6 w-6 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-blue-800">Virtualización</h4>
                    </div>
                    <p className="text-sm text-gray-700">Contenedores optimizados</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-purple-50 to-purple-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6">
                    <div className="flex items-center space-x-4 mb-4">
                      <div className="w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center group-hover:animate-spin">
                        <Download className="h-6 w-6 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-purple-800">Lazy Loading</h4>
                    </div>
                    <p className="text-sm text-gray-700">Carga bajo demanda</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-emerald-50 to-emerald-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6">
                    <div className="flex items-center space-x-4 mb-4">
                      <div className="w-12 h-12 bg-emerald-500 rounded-full flex items-center justify-center group-hover:animate-spin">
                        <Leaf className="h-6 w-6 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-emerald-800">Energía Renovable</h4>
                    </div>
                    <p className="text-sm text-gray-700">Servidores verdes</p>
                  </CardContent>
                </Card>

                <Card className="group border-0 bg-gradient-to-br from-orange-50 to-orange-100 hover:shadow-2xl transition-all duration-500 hover:scale-105">
                  <CardContent className="p-6">
                    <div className="flex items-center space-x-4 mb-4">
                      <div className="w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center group-hover:animate-spin">
                        <RotateCcw className="h-6 w-6 text-white" />
                      </div>
                      <h4 className="text-lg font-bold text-orange-800">SLCA</h4>
                    </div>
                    <p className="text-sm text-gray-700">Análisis ciclo de vida</p>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>

          {/* ¿Con qué? - Herramientas */}
          <section id="con-que" className="py-20 px-4 bg-gradient-to-br from-purple-50 to-pink-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-purple-800 mb-6">¿Con qué Herramientas?</h3>
                <p className="text-xl text-gray-600">Estándares y tecnologías</p>
              </div>

              <div className="grid md:grid-cols-2 gap-12">
                {/* Estándares */}
                <div>
                  <h4 className="text-2xl font-bold text-gray-800 mb-8 text-center">Estándares</h4>
                  <div className="grid grid-cols-2 gap-6">
                    <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:scale-105">
                      <CardContent className="p-6 text-center">
                        <div className="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-3 group-hover:animate-bounce">
                          <Award className="h-6 w-6 text-white" />
                        </div>
                        <h5 className="font-bold text-gray-800">ISO 14001</h5>
                      </CardContent>
                    </Card>

                    <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:scale-105">
                      <CardContent className="p-6 text-center">
                        <div className="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center mx-auto mb-3 group-hover:animate-bounce">
                          <BookOpen className="h-6 w-6 text-white" />
                        </div>
                        <h5 className="font-bold text-gray-800">GRI</h5>
                      </CardContent>
                    </Card>

                    <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:scale-105">
                      <CardContent className="p-6 text-center">
                        <div className="w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center mx-auto mb-3 group-hover:animate-bounce">
                          <BarChart3 className="h-6 w-6 text-white" />
                        </div>
                        <h5 className="font-bold text-gray-800">SCI</h5>
                      </CardContent>
                    </Card>

                    <Card className="group border-0 bg-white/80 backdrop-blur-sm hover:shadow-xl transition-all duration-300 hover:scale-105">
                      <CardContent className="p-6 text-center">
                        <div className="w-12 h-12 bg-emerald-500 rounded-full flex items-center justify-center mx-auto mb-3 group-hover:animate-bounce">
                          <TreePine className="h-6 w-6 text-white" />
                        </div>
                        <h5 className="font-bold text-gray-800">GSF</h5>
                      </CardContent>
                    </Card>
                  </div>
                </div>

                {/* Tecnologías */}
                <div>
                  <h4 className="text-2xl font-bold text-gray-800 mb-8 text-center">Tecnologías</h4>
                  <div className="space-y-4">
                    <Card className="border-0 bg-gradient-to-r from-orange-100 to-red-100 shadow-lg">
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-10 h-10 bg-orange-500 rounded-full flex items-center justify-center">
                            <Code className="h-5 w-5 text-white" />
                          </div>
                          <div>
                            <h5 className="font-bold text-orange-800">Rust</h5>
                            <p className="text-sm text-gray-600">Lenguaje eficiente</p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>

                    <Card className="border-0 bg-gradient-to-r from-blue-100 to-cyan-100 shadow-lg">
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center">
                            <Code className="h-5 w-5 text-white" />
                          </div>
                          <div>
                            <h5 className="font-bold text-blue-800">Go</h5>
                            <p className="text-sm text-gray-600">Performance optimizado</p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>

                    <Card className="border-0 bg-gradient-to-r from-green-100 to-emerald-100 shadow-lg">
                      <CardContent className="p-4">
                        <div className="flex items-center space-x-3">
                          <div className="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center">
                            <Cloud className="h-5 w-5 text-white" />
                          </div>
                          <div>
                            <h5 className="font-bold text-green-800">Cloud Carbon Footprint</h5>
                            <p className="text-sm text-gray-600">Monitoreo emisiones</p>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* ¿Cuánto? - Métricas con imagen de datacenter */}
          <section id="cuanto" className="py-20 px-4 bg-white/70">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-blue-800 mb-6">¿Cuánto Impacto?</h3>
                <p className="text-xl text-gray-600">Métricas específicas y resultados</p>
              </div>

              <div className="grid lg:grid-cols-2 gap-12">
                {/* Métricas Específicas */}
                <div className="space-y-6">
                  <h4 className="text-2xl font-bold text-gray-800 mb-6">Métricas Específicas</h4>

                  <Card className="border-0 bg-gradient-to-r from-green-100 to-green-200 shadow-lg">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <Zap className="h-6 w-6 text-green-600" />
                          <span className="font-medium text-gray-800">Watts/hora por usuario activo</span>
                        </div>
                        <div className="text-2xl font-bold text-green-700">-30%</div>
                      </div>
                    </CardContent>
                  </Card>

                  <Card className="border-0 bg-gradient-to-r from-blue-100 to-blue-200 shadow-lg">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <Leaf className="h-6 w-6 text-blue-600" />
                          <span className="font-medium text-gray-800">Kg CO₂ emitidos por sesión</span>
                        </div>
                        <div className="text-2xl font-bold text-blue-700">-20%</div>
                      </div>
                    </CardContent>
                  </Card>

                  <Card className="border-0 bg-gradient-to-r from-purple-100 to-purple-200 shadow-lg">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <Cpu className="h-6 w-6 text-purple-600" />
                          <span className="font-medium text-gray-800">Consumo CPU por transacción</span>
                        </div>
                        <div className="text-2xl font-bold text-purple-700">-40%</div>
                      </div>
                    </CardContent>
                  </Card>

                  <Card className="border-0 bg-gradient-to-r from-orange-100 to-orange-200 shadow-lg">
                    <CardContent className="p-6">
                      <div className="flex items-center justify-between">
                        <div className="flex items-center space-x-3">
                          <BarChart3 className="h-6 w-6 text-orange-600" />
                          <span className="font-medium text-gray-800">% recursos no utilizados</span>
                        </div>
                        <div className="text-2xl font-bold text-orange-700">-70%</div>
                      </div>
                    </CardContent>
                  </Card>
                </div>

                {/* Resultados Cuantificables con imagen */}
                <div className="space-y-6">
                  <h4 className="text-2xl font-bold text-gray-800 mb-6">Resultados Cuantificables</h4>

                  {/* Imagen de datacenter */}
                  <div className="mb-6">
                    <Image 
                      src={IMAGES.dataCenter}
                      alt="Data center eficiente"
                      className="w-full h-48 shadow-xl rounded-xl"
                    />
                  </div>

                  <Card className="border-0 bg-gradient-to-br from-green-50 to-green-100 shadow-xl">
                    <CardContent className="p-8 text-center">
                      <div className="text-4xl font-bold text-green-700 mb-2">30%</div>
                      <p className="text-gray-700">Reducción consumo energético con código optimizado</p>
                    </CardContent>
                  </Card>

                  <Card className="border-0 bg-gradient-to-br from-blue-50 to-blue-100 shadow-xl">
                    <CardContent className="p-8 text-center">
                      <div className="text-4xl font-bold text-blue-700 mb-2">50%</div>
                      <p className="text-gray-700">Ahorro energía en cargas en la nube</p>
                    </CardContent>
                  </Card>

                  <Card className="border-0 bg-gradient-to-br from-purple-50 to-purple-100 shadow-xl">
                    <CardContent className="p-8 text-center">
                      <div className="text-4xl font-bold text-purple-700 mb-2">70%</div>
                      <p className="text-gray-700">Reutilización de código en desarrollos</p>
                    </CardContent>
                  </Card>

                  {/* Dato Crítico */}
                  <div className="bg-gradient-to-r from-red-100 to-red-200 rounded-xl p-6 border-l-4 border-red-500">
                    <div className="flex items-center space-x-4">
                      <Server className="h-10 w-10 text-red-600 animate-pulse" />
                      <div>
                        <h5 className="text-lg font-bold text-red-800">Dato Crítico</h5>
                        <p className="text-red-700">1 servidor ineficiente = +1 tonelada CO₂/año</p>
                        <div className="mt-2 flex items-center space-x-2">
                          <TreePine className="h-4 w-4 text-green-600" />
                          <span className="text-sm text-gray-600">= 40 árboles para compensar</span>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </section>

          {/* Calculadora - Panel de Control Ecológico con imagen */}
          <section id="calculadora" className="py-20 px-4 bg-gradient-to-br from-green-50 to-blue-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-green-800 mb-6">Calculadora Ecológica</h3>
                <p className="text-xl text-gray-600">Panel de control de impacto ambiental</p>
              </div>

              {/* Imagen de calculadora */}
              <div className="mb-8 max-w-md mx-auto">
                <Image 
                  src={IMAGES.calculator}
                  alt="Calculadora de huella de carbono"
                  className="w-full h-48 shadow-2xl rounded-2xl"
                />
              </div>

              <Card className="border-0 bg-white/90 backdrop-blur-sm max-w-6xl mx-auto shadow-2xl">
                <CardHeader className="bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-t-lg">
                  <CardTitle className="flex items-center text-3xl">
                    <Calculator className="h-8 w-8 mr-3" />
                    EcoCalculator Pro
                  </CardTitle>
                  <CardDescription className="text-green-100 text-lg">
                    Análisis científico de huella de carbono digital
                  </CardDescription>
                </CardHeader>
                <CardContent className="p-8">
                  <div className="grid lg:grid-cols-2 gap-12">
                    {/* Panel de Controles */}
                    <div className="space-y-8">
                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <Users className="h-5 w-5 mr-2 text-green-600" />
                          Usuarios Activos: {carbonFootprint.users[0].toLocaleString()}
                        </Label>
                        <Slider
                          value={carbonFootprint.users}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, users: value })}
                          max={100000}
                          min={1}
                          step={100}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1</span>
                          <span>100,000</span>
                        </div>
                      </div>

                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <MousePointer className="h-5 w-5 mr-2 text-blue-600" />
                          Sesiones por Usuario: {carbonFootprint.sessions[0]}
                        </Label>
                        <Slider
                          value={carbonFootprint.sessions}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, sessions: value })}
                          max={50}
                          min={1}
                          step={1}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1</span>
                          <span>50</span>
                        </div>
                      </div>

                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <HardDrive className="h-5 w-5 mr-2 text-purple-600" />
                          Transferencia: {carbonFootprint.dataTransfer[0]} MB/día
                        </Label>
                        <Slider
                          value={carbonFootprint.dataTransfer}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, dataTransfer: value })}
                          max={10000}
                          min={1}
                          step={50}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1 MB</span>
                          <span>10,000 MB</span>
                        </div>
                      </div>

                      <Button
                        onClick={calculateCarbonFootprint}
                        className="w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white py-4 text-lg font-semibold rounded-xl shadow-lg hover:scale-105 transition-all duration-300"
                        disabled={isCalculating}
                      >
                        {isCalculating ? (
                          <>
                            <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3"></div>
                            Analizando Impacto...
                          </>
                        ) : (
                          <>
                            <Calculator className="h-6 w-6 mr-3" />
                            Calcular Huella Ecológica
                          </>
                        )}
                      </Button>
                    </div>

                    {/* Panel de Resultados */}
                    <div className="space-y-6">
                      {carbonResult ? (
                        <div className="space-y-6 animate-in slide-in-from-right-5">
                          {/* Árbol que crece */}
                          <div className="text-center bg-gradient-to-br from-green-100 to-green-200 rounded-2xl p-8 relative overflow-hidden">
                            <div className="relative z-10">
                              <div className="relative">
                                <TreePine
                                  className="h-24 w-24 text-green-600 mx-auto animate-pulse"
                                  style={{
                                    transform: `scale(${Math.min(1 + carbonResult.treesEquivalent / 100, 2)})`,
                                    transition: "transform 1s ease-out",
                                  }}
                                />
                                <div className="absolute -inset-4 bg-green-300 rounded-full opacity-20 animate-ping"></div>
                              </div>
                              <h4 className="text-2xl font-bold text-green-800 mt-4">
                                {carbonResult.treesEquivalent} Árboles
                              </h4>
                              <p className="text-green-700">Necesarios para compensar anualmente</p>
                            </div>
                            {/* Planeta que se vuelve más verde */}
                            <div className="absolute top-4 right-4 opacity-30">
                              <Globe
                                className={`h-12 w-12 ${carbonResult.annualCO2 < 5 ? "text-green-500" : carbonResult.annualCO2 < 10 ? "text-yellow-500" : "text-red-500"} animate-spin`}
                                style={{ animationDuration: "10s" }}
                              />
                            </div>
                          </div>

                          {/* Métricas Visuales */}
                          <div className="grid grid-cols-2 gap-4">
                            <div className="bg-blue-50 rounded-xl p-6 text-center">
                              <Zap className="h-8 w-8 text-blue-600 mx-auto mb-3" />
                              <div className="text-2xl font-bold text-blue-800">
                                {carbonResult.totalEnergy.toFixed(1)}
                              </div>
                              <div className="text-sm text-blue-600">kWh/día</div>
                            </div>

                            <div className="bg-red-50 rounded-xl p-6 text-center">
                              <Globe className="h-8 w-8 text-red-600 mx-auto mb-3" />
                              <div className="text-2xl font-bold text-red-800">{carbonResult.dailyCO2.toFixed(1)}</div>
                              <div className="text-sm text-red-600">kg CO₂/día</div>
                            </div>
                          </div>

                          {/* Impacto Anual */}
                          <div className="bg-gray-50 rounded-xl p-6 text-center">
                            <h5 className="text-lg font-bold text-gray-800 mb-4">Impacto Anual</h5>
                            <div className="text-3xl font-bold text-gray-800 mb-2">
                              {carbonResult.annualCO2.toFixed(2)} toneladas CO₂
                            </div>
                            <div className="text-sm text-gray-600">Emisiones anuales totales</div>
                          </div>
                        </div>
                      ) : (
                        <div className="text-center py-12">
                          <Calculator className="h-16 w-16 text-gray-300 mx-auto mb-4" />
                          <p className="text-gray-500 text-lg">Ajusta los parámetros y calcula tu impacto</p>
                        </div>
                      )}
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </section>

          {/* Evaluación - Gamificado */}
          <section id="cumpliendo" className="py-20 px-4 bg-gradient-to-br from-purple-50 to-pink-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-purple-800 mb-6">¿Estás Cumpliendo?</h3>
                <p className="text-xl text-gray-600">Evaluación de prácticas sostenibles</p>
              </div>

              <div className="max-w-6xl mx-auto">
                <Card className="border-0 bg-white/90 backdrop-blur-sm shadow-2xl">
                  <CardHeader className="bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-t-lg">
                    <div className="flex items-center justify-between">
                      <CardTitle className="flex items-center text-3xl">
                        <Trophy className="h-8 w-8 mr-3" />
                        EcoChallenge
                      </CardTitle>
                      <div className="text-right">
                        <div className="text-4xl font-bold">{complianceScore}%</div>
                        <div className="text-purple-100">Puntuación Verde</div>
                      </div>
                    </div>
                    <div className="mt-4">
                      <Progress value={complianceScore} className="h-4 bg-purple-200" />
                      <div className="flex justify-between text-sm text-purple-100 mt-2">
                        <span>{checkedItems.length} completadas</span>
                        <span>{complianceItems.length} total</span>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent className="p-8">
                    <div className="grid md:grid-cols-2 gap-6 mb-8">
                      {complianceItems.map((item, index) => {
                        const Icon = item.icon
                        return (
                          <div
                            key={index}
                            className={`flex items-center space-x-4 p-4 rounded-xl border-2 transition-all duration-300 cursor-pointer ${
                              checkedItems.includes(item.text)
                                ? "bg-green-50 border-green-300 shadow-md"
                                : "bg-gray-50 border-gray-200 hover:border-green-300 hover:bg-green-50"
                            }`}
                            onClick={() => toggleCheckItem(item.text)}
                          >
                            <div className="relative">
                              <Checkbox
                                checked={checkedItems.includes(item.text)}
                                onChange={() => {}}
                                className="w-6 h-6"
                              />
                              {checkedItems.includes(item.text) && (
                                <div className="absolute -inset-2 bg-green-300 rounded-full opacity-20 animate-ping"></div>
                              )}
                            </div>
                            <div className="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                              <Icon className="h-5 w-5 text-gray-600" />
                            </div>
                            <span
                              className={`flex-1 font-medium ${
                                checkedItems.includes(item.text) ? "text-green-800 line-through" : "text-gray-700"
                              }`}
                            >
                              {item.text}
                            </span>
                            {checkedItems.includes(item.text) && (
                              <Star className="h-5 w-5 text-yellow-500 animate-spin" />
                            )}
                          </div>
                        )
                      })}
                    </div>

                    {/* Sistema de Badges */}
                    <div className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-2xl p-8 text-center relative overflow-hidden">
                      <h4 className="text-2xl font-bold text-gray-800 mb-6">Tu Nivel Ecológico</h4>

                      <div className="flex justify-center mb-6">
                        {complianceScore >= 80 && (
                          <div className="text-green-600">
                            <Medal className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">¡Eco Master!</div>
                            <div className="text-sm">Líder en sostenibilidad digital</div>
                          </div>
                        )}
                        {complianceScore >= 60 && complianceScore < 80 && (
                          <div className="text-blue-600">
                            <Award className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Warrior</div>
                            <div className="text-sm">En el camino correcto</div>
                          </div>
                        )}
                        {complianceScore >= 40 && complianceScore < 60 && (
                          <div className="text-yellow-600">
                            <Star className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Rookie</div>
                            <div className="text-sm">Buen inicio, sigue mejorando</div>
                          </div>
                        )}
                        {complianceScore < 40 && (
                          <div className="text-gray-600">
                            <Target className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Beginner</div>
                            <div className="text-sm">¡Comienza tu viaje verde!</div>
                          </div>
                        )}
                      </div>

                      {/* Confetti Effect */}
                      {complianceScore === 100 && (
                        <div className="absolute inset-0 pointer-events-none">
                          {[...Array(30)].map((_, i) => (
                            <div
                              key={i}
                              className="absolute animate-bounce"
                              style={{
                                left: `${Math.random() * 100}%`,
                                top: `${Math.random() * 100}%`,
                                animationDelay: `${Math.random() * 2}s`,
                                animationDuration: `${1 + Math.random()}s`,
                              }}
                            >
                              <Sparkles className="h-4 w-4 text-yellow-500" />
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
        </main>

        {/* Footer simplificado para esta versión */}
        <footer className="bg-gradient-to-r from-green-800 via-blue-800 to-purple-800 text-white py-12">
          <div className="container mx-auto px-4 text-center">
            <h4 className="text-xl font-bold mb-4">Green Software Enhanced</h4>
            <p className="text-white/70">✨ Versión con imágenes optimizadas</p>
          </div>
        </footer>
      </div>

      {/* Estilos CSS adicionales */}
      <style jsx>{`
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          50% { transform: translateY(-20px) rotate(5deg); }
        }
        
        @keyframes leaf-fall {
          0% { transform: translateY(-100vh) rotate(0deg); opacity: 0; }
          10% { opacity: 1; }
          90% { opacity: 1; }
          100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
        }
        
        .animate-float {
          animation: float 6s ease-in-out infinite;
        }
        
        .animate-leaf-fall {
          animation: leaf-fall linear infinite;
        }
      `}</style>
    </TooltipProvider>
  )
}

          

          {/* Calculadora - Panel de Control Ecológico con imagen */}
          <section id="calculadora" className="py-20 px-4 bg-gradient-to-br from-green-50 to-blue-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-green-800 mb-6">Calculadora Ecológica</h3>
                <p className="text-xl text-gray-600">Panel de control de impacto ambiental</p>
              </div>

              {/* Imagen de calculadora */}
              <div className="mb-8 max-w-md mx-auto">
                <Image 
                  src={IMAGES.calculator}
                  alt="Calculadora de huella de carbono"
                  className="w-full h-48 shadow-2xl rounded-2xl"
                />
              </div>

              <Card className="border-0 bg-white/90 backdrop-blur-sm max-w-6xl mx-auto shadow-2xl">
                <CardHeader className="bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-t-lg">
                  <CardTitle className="flex items-center text-3xl">
                    <Calculator className="h-8 w-8 mr-3" />
                    EcoCalculator Pro
                  </CardTitle>
                  <CardDescription className="text-green-100 text-lg">
                    Análisis científico de huella de carbono digital
                  </CardDescription>
                </CardHeader>
                <CardContent className="p-8">
                  <div className="grid lg:grid-cols-2 gap-12">
                    {/* Panel de Controles */}
                    <div className="space-y-8">
                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <Users className="h-5 w-5 mr-2 text-green-600" />
                          Usuarios Activos: {carbonFootprint.users[0].toLocaleString()}
                        </Label>
                        <Slider
                          value={carbonFootprint.users}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, users: value })}
                          max={100000}
                          min={1}
                          step={100}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1</span>
                          <span>100,000</span>
                        </div>
                      </div>

                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <MousePointer className="h-5 w-5 mr-2 text-blue-600" />
                          Sesiones por Usuario: {carbonFootprint.sessions[0]}
                        </Label>
                        <Slider
                          value={carbonFootprint.sessions}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, sessions: value })}
                          max={50}
                          min={1}
                          step={1}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1</span>
                          <span>50</span>
                        </div>
                      </div>

                      <div className="space-y-4">
                        <Label className="flex items-center text-lg font-semibold text-gray-800">
                          <HardDrive className="h-5 w-5 mr-2 text-purple-600" />
                          Transferencia: {carbonFootprint.dataTransfer[0]} MB/día
                        </Label>
                        <Slider
                          value={carbonFootprint.dataTransfer}
                          onValueChange={(value) => setCarbonFootprint({ ...carbonFootprint, dataTransfer: value })}
                          max={10000}
                          min={1}
                          step={50}
                          className="w-full"
                        />
                        <div className="flex justify-between text-sm text-gray-500">
                          <span>1 MB</span>
                          <span>10,000 MB</span>
                        </div>
                      </div>

                      <Button
                        onClick={calculateCarbonFootprint}
                        className="w-full bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white py-4 text-lg font-semibold rounded-xl shadow-lg hover:scale-105 transition-all duration-300"
                        disabled={isCalculating}
                      >
                        {isCalculating ? (
                          <>
                            <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3"></div>
                            Analizando Impacto...
                          </>
                        ) : (
                          <>
                            <Calculator className="h-6 w-6 mr-3" />
                            Calcular Huella Ecológica
                          </>
                        )}
                      </Button>
                    </div>

                    {/* Panel de Resultados */}
                    <div className="space-y-6">
                      {carbonResult ? (
                        <div className="space-y-6 animate-in slide-in-from-right-5">
                          {/* Árbol que crece */}
                          <div className="text-center bg-gradient-to-br from-green-100 to-green-200 rounded-2xl p-8 relative overflow-hidden">
                            <div className="relative z-10">
                              <div className="relative">
                                <TreePine
                                  className="h-24 w-24 text-green-600 mx-auto animate-pulse"
                                  style={{
                                    transform: `scale(${Math.min(1 + carbonResult.treesEquivalent / 100, 2)})`,
                                    transition: "transform 1s ease-out",
                                  }}
                                />
                                <div className="absolute -inset-4 bg-green-300 rounded-full opacity-20 animate-ping"></div>
                              </div>
                              <h4 className="text-2xl font-bold text-green-800 mt-4">
                                {carbonResult.treesEquivalent} Árboles
                              </h4>
                              <p className="text-green-700">Necesarios para compensar anualmente</p>
                            </div>
                            {/* Planeta que se vuelve más verde */}
                            <div className="absolute top-4 right-4 opacity-30">
                              <Globe
                                className={`h-12 w-12 ${carbonResult.annualCO2 < 5 ? "text-green-500" : carbonResult.annualCO2 < 10 ? "text-yellow-500" : "text-red-500"} animate-spin`}
                                style={{ animationDuration: "10s" }}
                              />
                            </div>
                          </div>

                          {/* Métricas Visuales */}
                          <div className="grid grid-cols-2 gap-4">
                            <div className="bg-blue-50 rounded-xl p-6 text-center">
                              <Zap className="h-8 w-8 text-blue-600 mx-auto mb-3" />
                              <div className="text-2xl font-bold text-blue-800">
                                {carbonResult.totalEnergy.toFixed(1)}
                              </div>
                              <div className="text-sm text-blue-600">kWh/día</div>
                            </div>

                            <div className="bg-red-50 rounded-xl p-6 text-center">
                              <Globe className="h-8 w-8 text-red-600 mx-auto mb-3" />
                              <div className="text-2xl font-bold text-red-800">{carbonResult.dailyCO2.toFixed(1)}</div>
                              <div className="text-sm text-red-600">kg CO₂/día</div>
                            </div>
                          </div>

                          {/* Impacto Anual */}
                          <div className="bg-gray-50 rounded-xl p-6 text-center">
                            <h5 className="text-lg font-bold text-gray-800 mb-4">Impacto Anual</h5>
                            <div className="text-3xl font-bold text-gray-800 mb-2">
                              {carbonResult.annualCO2.toFixed(2)} toneladas CO₂
                            </div>
                            <div className="text-sm text-gray-600">Emisiones anuales totales</div>
                          </div>
                        </div>
                      ) : (
                        <div className="text-center py-12">
                          <Calculator className="h-16 w-16 text-gray-300 mx-auto mb-4" />
                          <p className="text-gray-500 text-lg">Ajusta los parámetros y calcula tu impacto</p>
                        </div>
                      )}
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </section>

          {/* Evaluación - Gamificado */}
          <section id="cumpliendo" className="py-20 px-4 bg-gradient-to-br from-purple-50 to-pink-50">
            <div className="container mx-auto">
              <div className="text-center mb-16">
                <h3 className="text-5xl font-bold text-purple-800 mb-6">¿Estás Cumpliendo?</h3>
                <p className="text-xl text-gray-600">Evaluación de prácticas sostenibles</p>
              </div>

              <div className="max-w-6xl mx-auto">
                <Card className="border-0 bg-white/90 backdrop-blur-sm shadow-2xl">
                  <CardHeader className="bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-t-lg">
                    <div className="flex items-center justify-between">
                      <CardTitle className="flex items-center text-3xl">
                        <Trophy className="h-8 w-8 mr-3" />
                        EcoChallenge
                      </CardTitle>
                      <div className="text-right">
                        <div className="text-4xl font-bold">{complianceScore}%</div>
                        <div className="text-purple-100">Puntuación Verde</div>
                      </div>
                    </div>
                    <div className="mt-4">
                      <Progress value={complianceScore} className="h-4 bg-purple-200" />
                      <div className="flex justify-between text-sm text-purple-100 mt-2">
                        <span>{checkedItems.length} completadas</span>
                        <span>{complianceItems.length} total</span>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent className="p-8">
                    <div className="grid md:grid-cols-2 gap-6 mb-8">
                      {complianceItems.map((item, index) => {
                        const Icon = item.icon
                        return (
                          <div
                            key={index}
                            className={`flex items-center space-x-4 p-4 rounded-xl border-2 transition-all duration-300 cursor-pointer ${
                              checkedItems.includes(item.text)
                                ? "bg-green-50 border-green-300 shadow-md"
                                : "bg-gray-50 border-gray-200 hover:border-green-300 hover:bg-green-50"
                            }`}
                            onClick={() => toggleCheckItem(item.text)}
                          >
                            <div className="relative">
                              <Checkbox
                                checked={checkedItems.includes(item.text)}
                                onChange={() => {}}
                                className="w-6 h-6"
                              />
                              {checkedItems.includes(item.text) && (
                                <div className="absolute -inset-2 bg-green-300 rounded-full opacity-20 animate-ping"></div>
                              )}
                            </div>
                            <div className="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                              <Icon className="h-5 w-5 text-gray-600" />
                            </div>
                            <span
                              className={`flex-1 font-medium ${
                                checkedItems.includes(item.text) ? "text-green-800 line-through" : "text-gray-700"
                              }`}
                            >
                              {item.text}
                            </span>
                            {checkedItems.includes(item.text) && (
                              <Star className="h-5 w-5 text-yellow-500 animate-spin" />
                            )}
                          </div>
                        )
                      })}
                    </div>

                    {/* Sistema de Badges */}
                    <div className="bg-gradient-to-r from-yellow-50 to-orange-50 rounded-2xl p-8 text-center relative overflow-hidden">
                      <h4 className="text-2xl font-bold text-gray-800 mb-6">Tu Nivel Ecológico</h4>

                      <div className="flex justify-center mb-6">
                        {complianceScore >= 80 && (
                          <div className="text-green-600">
                            <Medal className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">¡Eco Master!</div>
                            <div className="text-sm">Líder en sostenibilidad digital</div>
                          </div>
                        )}
                        {complianceScore >= 60 && complianceScore < 80 && (
                          <div className="text-blue-600">
                            <Award className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Warrior</div>
                            <div className="text-sm">En el camino correcto</div>
                          </div>
                        )}
                        {complianceScore >= 40 && complianceScore < 60 && (
                          <div className="text-yellow-600">
                            <Star className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Rookie</div>
                            <div className="text-sm">Buen inicio, sigue mejorando</div>
                          </div>
                        )}
                        {complianceScore < 40 && (
                          <div className="text-gray-600">
                            <Target className="h-16 w-16 mx-auto mb-3 animate-bounce" />
                            <div className="text-2xl font-bold">Eco Beginner</div>
                            <div className="text-sm">¡Comienza tu viaje verde!</div>
                          </div>
                        )}
                      </div>

                      {/* Confetti Effect */}
                      {complianceScore === 100 && (
                        <div className="absolute inset-0 pointer-events-none">
                          {[...Array(30)].map((_, i) => (
                            <div
                              key={i}
                              className="absolute animate-bounce"
                              style={{
                                left: `${Math.random() * 100}%`,
                                top: `${Math.random() * 100}%`,
                                animationDelay: `${Math.random() * 2}s`,
                                animationDuration: `${1 + Math.random()}s`,
                              }}
                            >
                              <Sparkles className="h-4 w-4 text-yellow-500" />
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
        </main>

        {/* Footer Visual - Información Académica */}
        <footer className="bg-gradient-to-r from-green-800 via-blue-800 to-purple-800 text-white py-12 relative overflow-hidden">
          {/* Pattern de fondo */}
          <div className="absolute inset-0 opacity-10">
            <div
              className="absolute inset-0"
              style={{
                backgroundImage: `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fillRule='evenodd'%3E%3Cg fill='%23ffffff' fillOpacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`,
              }}
            ></div>
          </div>

          <div className="container mx-auto px-4 relative z-10">
            <div className="text-center space-y-8">
              {/* Autores */}
              <div>
                <h4 className="text-xl font-bold mb-6">Autores del Proyecto</h4>
                <div className="grid md:grid-cols-4 gap-6">
                  {[
                    { name: "Alejo Herrera", email: "alejotomasherrera@gmail.com", color: "green" },
                    { name: "Facundo Luna", email: "fakkuluna98@gmail.com", color: "blue" },
                    { name: "Lucas Romaniello", email: "lucasromaniello94@gmail.com", color: "purple" },
                    { name: "Matias V. Palacios", email: "matip5959@gmail.com", color: "orange" },
                  ].map((author, index) => (
                    <Card
                      key={index}
                      className="bg-white/10 border-white/20 hover:bg-white/20 transition-all duration-300"
                    >
                      <CardContent className="p-6 text-center">
                        <div
                          className={`w-16 h-16 bg-${author.color}-500 rounded-full flex items-center justify-center mx-auto mb-4`}
                        >
                          <span className="text-white font-bold text-lg">
                            {author.name
                              .split(" ")
                              .map((n) => n[0])
                              .join("")}
                          </span>
                        </div>
                        <div>
                          <div className="font-semibold text-white">{author.name}</div>
                          <div className="flex items-center justify-center mt-2">
                            <Mail className="h-3 w-3 mr-1" />
                            <span className="text-white/60 text-xs">{author.email}</span>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>

              <Separator className="bg-white/20" />

              {/* Copyright */}
              <div className="flex items-center justify-center space-x-6 text-sm text-white/70">
                <span className="flex items-center">
                  <TreePine className="h-4 w-4 mr-1" />© 2025 Green Software
                </span>
                <span className="flex items-center">
                  <Leaf className="h-4 w-4 mr-1" />
                  Desarrollo Sostenible
                </span>
              </div>
            </div>
          </div>
        </footer>
      </div>

      {/* Estilos CSS adicionales */}
      <style jsx>{`
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          50% { transform: translateY(-20px) rotate(5deg); }
        }
        
        @keyframes leaf-fall {
          0% { transform: translateY(-100vh) rotate(0deg); opacity: 0; }
          10% { opacity: 1; }
          90% { opacity: 1; }
          100% { transform: translateY(100vh) rotate(360deg); opacity: 0; }
        }
        
        .animate-float {
          animation: float 6s ease-in-out infinite;
        }
        
        .animate-leaf-fall {
          animation: leaf-fall linear infinite;
        }
      `}</style>
    </TooltipProvider>
  )
}
